create table Director(
                         director_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                         name varchar(100) NOT NULL UNIQUE,
                         age int CHECK (age > 15)
);

create table Move(
                     move_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                     director_id int NOT NULL REFERENCES Director(director_id),
                     name varchar(200) NOT NULL,
                     year_of_production int CHECK (Move.year_of_production > 1900)
);

INSERT INTO Director(name, age) VALUES ('Quentin Tarantino', 57);
INSERT INTO Director(name, age) VALUES ('Martin Scorsese', 78);
INSERT INTO Director(name, age) VALUES ('Guy Ritchie', 52);
INSERT INTO Director(name, age) VALUES ('Woody Allen', 85);
INSERT INTO Director(name, age) VALUES ('David Lybch', 74);
INSERT INTO Director(name, age) VALUES ('Christopher Nolan', 50);

INSERT INTO Move(director_id, name, year_of_production) VALUES (1, 'Reservoir Dogs', 1992);
INSERT INTO Move(director_id, name, year_of_production) VALUES (1, 'Pulp Fiction', 1994);
INSERT INTO Move(director_id, name, year_of_production) VALUES (1, 'The Hateful Eight', 2015);
INSERT INTO Move(director_id, name, year_of_production) VALUES (2, 'Taxi Driver', 1976);
INSERT INTO Move(director_id, name, year_of_production) VALUES (2, 'Goodfellas', 1990);
INSERT INTO Move(director_id, name, year_of_production) VALUES (3, 'Snatch', 2000);
INSERT INTO Move(director_id, name, year_of_production) VALUES (4, 'Midnight in Paris', 2011);
INSERT INTO Move(director_id, name, year_of_production) VALUES (6, 'Inception', 2010);

SELECT * FROM director JOIN move m on director.director_id = m.director_id

SELECT * FROM director LEFT JOIN move m on director.director_id = m.director_id

create table Actor(
                      actor_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                      name varchar(100) NOT NULL UNIQUE,
                      age int CHECK ( age > 0 )
);

INSERT INTO Actor(name, age) VALUES ('Harvey Keitel', 81);
INSERT INTO Actor(name, age) VALUES ('Robert de Niro', 77);
INSERT INTO Actor(name, age) VALUES ('Leonardo DiCaprio', 46);
INSERT INTO Actor(name, age) VALUES ('Jason Statham', 53);
INSERT INTO Actor(name, age) VALUES ('Joe Pesci', 77);
INSERT INTO Actor(name, age) VALUES ('Samuel L. Jacson', 72);

create table Actor_Move(
                           actor_id int REFERENCES Actor(actor_id),
                           move_id int REFERENCES Move(move_id),
                           PRIMARY KEY (actor_id, move_id)
);

INSERT INTO Actor_move VALUES(1, 1);
INSERT INTO Actor_move VALUES(1, 2);
INSERT INTO Actor_move VALUES(2, 5);
INSERT INTO Actor_move VALUES(2, 6);
INSERT INTO Actor_move VALUES(3, 4);
INSERT INTO Actor_move VALUES(3, 6);
INSERT INTO Actor_move VALUES(3, 2);
INSERT INTO Actor_move VALUES(4, 6);
INSERT INTO Actor_move VALUES(6, 2);
INSERT INTO Actor_move VALUES(6, 3);

SELECT Actor.name, Move.name FROM Actor
                                      JOIN actor_move on actor.actor_id = actor_move.actor_id
                                      JOIN move on actor_move.move_id = move.move_id;


alter table Person add column address varchar;

